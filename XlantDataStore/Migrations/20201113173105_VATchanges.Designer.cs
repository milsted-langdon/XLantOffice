// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XLantDataStore;

namespace XLantDataStore.Migrations
{
    [DbContext(typeof(XLantDbContext))]
    [Migration("20201113173105_VATchanges")]
    partial class VATchanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XLantCore.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MLFSAdvisorId")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MLFSAdvisorId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("XLantCore.Models.DataMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalFieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalFieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataMaps");
                });

            modelBuilder.Entity("XLantCore.Models.EmailAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int?>("MLFSAdvisorId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MLFSAdvisorId");

                    b.ToTable("EmailAddress");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSAdvisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReplacementAdvisorId")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReplacementAdvisorId");

                    b.ToTable("MLFSAdvisors");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReportingPeriodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("ReportingPeriodId");

                    b.ToTable("MLFSBudgets");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSCommissionRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<decimal>("EndingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StartingValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.ToTable("MLFSCommissionRates");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSDebtorAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DebtorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsVariance")
                        .HasColumnType("bit");

                    b.Property<bool>("NotTakenUp")
                        .HasColumnType("bit");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<int>("ReportingPeriodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("ReceiptId")
                        .IsUnique()
                        .HasFilter("[ReceiptId] IS NOT NULL");

                    b.HasIndex("ReportingPeriodId");

                    b.ToTable("MLFSDebtorAdjustments");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSIncome", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Campaign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampaignSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClientOnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IOReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IgnoreFromCommission")
                        .HasColumnType("bit");

                    b.Property<string>("IncomeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdjustment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClawBack")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTopUp")
                        .HasColumnType("bit");

                    b.Property<string>("JointClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JointClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RelevantDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReportingPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("ReportingPeriodId");

                    b.ToTable("MLFSIncome");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSReportingPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("ReportOrder")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MLFSReportingPeriods");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdvisorId")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedOtherIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IOId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IOReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncomeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("JointClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JointClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OnGoingPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Organisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedClients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RelevantDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReportingPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdvisorId");

                    b.HasIndex("IncomeId");

                    b.HasIndex("ReportingPeriodId");

                    b.ToTable("MLFSSales");
                });

            modelBuilder.Entity("XLantCore.Models.Number", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int?>("MLFSAdvisorId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MLFSAdvisorId");

                    b.ToTable("Number");
                });

            modelBuilder.Entity("XLantCore.Models.Address", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", null)
                        .WithMany("Addresses")
                        .HasForeignKey("MLFSAdvisorId");
                });

            modelBuilder.Entity("XLantCore.Models.EmailAddress", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", null)
                        .WithMany("EmailAddresses")
                        .HasForeignKey("MLFSAdvisorId");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSAdvisor", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", "ReplacementAdvisor")
                        .WithMany()
                        .HasForeignKey("ReplacementAdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XLantCore.Models.MLFSBudget", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", "Advisor")
                        .WithMany("Budget")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XLantCore.Models.MLFSReportingPeriod", "ReportingPeriod")
                        .WithMany("Budgets")
                        .HasForeignKey("ReportingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XLantCore.Models.MLFSCommissionRate", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", "Advisor")
                        .WithMany("CommissionRates")
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XLantCore.Models.MLFSDebtorAdjustment", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSSale", "Debtor")
                        .WithMany("Adjustments")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XLantCore.Models.MLFSIncome", "Receipt")
                        .WithOne("MLFSDebtorAdjustment")
                        .HasForeignKey("XLantCore.Models.MLFSDebtorAdjustment", "ReceiptId");

                    b.HasOne("XLantCore.Models.MLFSReportingPeriod", "ReportingPeriod")
                        .WithMany()
                        .HasForeignKey("ReportingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XLantCore.Models.MLFSIncome", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", "Advisor")
                        .WithMany()
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XLantCore.Models.MLFSReportingPeriod", "ReportingPeriod")
                        .WithMany("Receipts")
                        .HasForeignKey("ReportingPeriodId");
                });

            modelBuilder.Entity("XLantCore.Models.MLFSSale", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", "Advisor")
                        .WithMany()
                        .HasForeignKey("AdvisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XLantCore.Models.MLFSIncome", "Income")
                        .WithMany()
                        .HasForeignKey("IncomeId");

                    b.HasOne("XLantCore.Models.MLFSReportingPeriod", "ReportingPeriod")
                        .WithMany("Sales")
                        .HasForeignKey("ReportingPeriodId");
                });

            modelBuilder.Entity("XLantCore.Models.Number", b =>
                {
                    b.HasOne("XLantCore.Models.MLFSAdvisor", null)
                        .WithMany("Numbers")
                        .HasForeignKey("MLFSAdvisorId");
                });
#pragma warning restore 612, 618
        }
    }
}
